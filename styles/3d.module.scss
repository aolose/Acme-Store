.scene {
  background: radial-gradient(#f2f2f2, #aaa);
  perspective: 2000px;
  overflow: hidden;

  :global {
    div {
      position: absolute;
      transform-style: preserve-3d;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}

.baseCubeXYZ {
  transform: translate3d(var(--x), var(--y), var(--z));
}

.baseCubeRotate {
  transform: rotateY(var(--ry)) rotateX(var(--rx));
}

.baseWallFront {
  --ryv: 0deg;
}

.baseWallLeft {
  --ryv: -90deg;
}

.baseWallBack {
  --ryv: 180deg;
}

.baseWallRight {
  --ryv: 90deg;
}

.baseWallTop {
  --rxv: 90deg;
  background: #ddd;
}

.baseWallBottom {
  --rxv: -90deg;
  filter: brightness(.3);
}

.innerFront {
}


.innerBack {
  background: #4b4b4b;
  filter: brightness(.4);
}

.innerLeft {
  background: #666;
  filter: brightness(.6);
}


.innerRight {
  background: #cacaca;
  filter: brightness(.8);
}

.basePyramid {
  .baseWallTop {
    width: var(--twx);
    height: var(--twz);
  }
}

.baseWallFront, .baseWallBack {
  --rr: var(--fba);
  --tz: calc(var(--wz) / 2);
  --fbe: calc(var(--fbw) + var(--twx));
  --gap: calc(var(--wy) - var(--fbh));
}

.baseWallLeft, .baseWallRight {
  --rr: var(--lra);
  --tz: calc(var(--wx) / 2);
  --lre: calc(var(--lrw) + var(--twz));
  --gap: calc(var(--wy) - var(--lrh));
}

.innerFront, .innerBack {
  width: var(--wx);
  height: var(--fbh);
  clip-path: polygon(var(--fbw) 0, var(--fbe) 0, var(--wx) var(--fbh), 0 var(--fbh));
}

.innerLeft, .innerRight {
  width: var(--wz);
  height: var(--lrh);
  clip-path: polygon(var(--lrw) 0, var(--lre) 0, var(--wz) var(--lrh), 0 var(--lrh));
}

.baseWallTop, .baseWallBottom {
  background-color: #fff;
  width: var(--wx);
  height: var(--wz);
  --tz: calc(var(--wy) / 2)
}

.innerBack,
.innerFront,
.innerRight,
.innerLeft {
  background-color: #fff;
  transform-origin: bottom center;
  --fix-h: calc(var(--gap) / 2);
  transform: translateY(var(--fix-h, 0)) rotateX(var(--rr, 0deg));
}

.baseWallTop,
.baseWallLeft,
.baseWallRight,
.baseWallBottom,
.baseWallBack,
.baseWallFront {
  position: absolute;
  transform: rotateY(var(--ryv, 0deg)) rotateX(var(--rxv, 0deg)) translateZ(var(--tz));
}